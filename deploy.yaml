---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: pod-reader
rules:
  - apiGroups: [""] # "" indicates the core API group
    resources: ["configmaps", "pods"]
    verbs: ["get", "watch", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: pod-reader
subjects:
  - kind: ServiceAccount
    name: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: pod-reader
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: k8s-test
  name: k8s-test
spec:
  replicas: 1
  selector:
    matchLabels:
      app: k8s-test
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: k8s-test
      annotations:
        test: foo-bar-bam
    spec:
      containers:
        - image: ghcr.io/isometry/k8s-test:latest
          imagePullPolicy: Always
          name: k8s-test
          ports:
            - name: service-port
              containerPort: 8080
              protocol: TCP
          volumeMounts:
            - mountPath: /etc/podinfo
              name: podinfo
              readOnly: true
          resources:
            limits:
              cpu: 100m
              memory: 32Mi
            requests:
              cpu: 100m
              memory: 32Mi
          env:
            - name: PORT
              value: "8080"
            - name: BACKGROUND_COLOR
              value: "#000"
            - name: FOREGROUND_COLOR
              value: "#FFF"
            - name: METADATA_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: METADATA_UID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.uid
          livenessProbe:
            httpGet:
              path: /health
              port: service-port
            initialDelaySeconds: 0
            periodSeconds: 1
          readinessProbe:
            httpGet:
              path: /health
              port: service-port
            initialDelaySeconds: 0
            periodSeconds: 1

      volumes:
        - name: podinfo
          downwardAPI:
            items:
              - path: labels
                fieldRef:
                  fieldPath: metadata.labels
              - path: annotations
                fieldRef:
                  fieldPath: metadata.annotations
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: k8s-test
  name: k8s-test
spec:
  allocateLoadBalancerNodePorts: true
  externalTrafficPolicy: Cluster
  internalTrafficPolicy: Cluster
  ipFamilies:
    - IPv4
  ipFamilyPolicy: SingleStack
  ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: 8080
  selector:
    app: k8s-test
  sessionAffinity: None
  type: LoadBalancer
